<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:property-placeholder location="classpath:config.properties"/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/res/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.min.matzip" />  <!-- Annotation 붙은 애들 전부 스캔 -->
	
	<beans:bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<beans:property name="poolName" value="springHikariCP"></beans:property>
		<beans:property name="connectionTestQuery" value="SELECT 1 FROM DUAL"></beans:property>
		<beans:property name="driverClassName" value="${db.driver}"></beans:property> <!-- DB연결시 사용 -->
		<beans:property name="maximumPoolSize" value="10"></beans:property>
		<beans:property name="idleTimeout" value="5000"></beans:property>
		
		<beans:property name="jdbcUrl" value="jdbc:mysql://localhost:3306/matzip?characterEncoding=UTF-8"></beans:property>
		<beans:property name="username" value="root"></beans:property>
		<beans:property name="password" value="koreait2020"></beans:property>
	</beans:bean>
	
	<beans:bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<beans:constructor-arg ref="hikariConfig"></beans:constructor-arg>
	</beans:bean>
	
	<!-- 객체 생성담당  -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="configLocation" value="/WEB-INF/spring/mybatis-alias.xml"></beans:property>
	</beans:bean>
	
	
	<mybatis-spring:scan base-package="com.min.matzip"></mybatis-spring:scan> <!--  @Mapper를 찾는 역할 -->
	
	<!-- 트랜잭션 -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	<!-- 트랜잭션을 찾음 -->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
	
	<interceptors>
		<interceptor>
			<mapping path="/**"></mapping>
			<beans:bean class="com.min.matzip.LoginCheckInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	<interceptors>
		<interceptor>
			<mapping path="/rest/*"></mapping>
			<beans:bean class="com.min.matzip.RestInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	<!-- 파일 업로드 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="5242880"></beans:property> <!-- 5MB -->
	</beans:bean>
	
	
</beans:beans>
